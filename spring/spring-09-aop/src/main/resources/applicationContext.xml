<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">


        <!--注册bean-->
        <bean id="userService" class="com.epfox.service.UserServiceImpl"/>
        <bean id="log" class="com.epfox.log.Log"/>
        <bean id="afterLog" class="com.epfox.log.AfterLog"/>

        <!--方式三-->
        <bean id="annotationPointcut" class="com.epfox.diy.AnnotationPointcut"/>
        <!--开启注解支持-->
        <aop:aspectj-autoproxy/>

        <!--方式一：使用原生Spring API接口-->
        <!--配置aop:需要导入aop的约束-->
<!--        <aop:config>-->
            <!--切入点 expression:表达式匹配要执行的方法 expression:要执行的位置-->
<!--            <aop:pointcut id="pointcut" expression="execution(* com.epfox.service.UserServiceImpl.*(..))"/>-->
            <!--执行环绕增加！-->
<!--            <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--            <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--        </aop:config>-->


         <!--方式二：自定义类-->
<!--         <bean id="diy" class="com.epfox.diy.DiyPointCut"/>-->

<!--        <aop:config>-->
<!--            &lt;!&ndash;自定义切面，ref 要引用的类&ndash;&gt;-->
<!--            <aop:aspect ref="diy">-->
<!--                &lt;!&ndash;切入点&ndash;&gt;-->
<!--                <aop:pointcut id="point" expression="execution(* com.epfox.service.UserServiceImpl.*(..))"/>-->
<!--                &lt;!&ndash;通知&ndash;&gt;-->
<!--                <aop:before method="before" pointcut-ref="point"/>-->
<!--                <aop:after method="after" pointcut-ref="point"/>-->
<!--            </aop:aspect>-->
<!--        </aop:config>-->














</beans>